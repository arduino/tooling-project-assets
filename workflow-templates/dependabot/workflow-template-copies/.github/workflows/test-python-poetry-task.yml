# Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/test-python-poetry-task.md
name: Test Python

env:
  # See: https://github.com/actions/setup-python/tree/v2#available-versions-of-python
  PYTHON_VERSION: "3.9"

# See: https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
on:
  create:
  push:
    paths:
      - ".github/workflows/test-python-poetry-task.ya?ml"
      - "Taskfile.ya?ml"
      - "poetry.lock"
      - "pyproject.toml"
      - "tests/**"
      - "**.py"
  pull_request:
    paths:
      - ".github/workflows/test-python-poetry-task.ya?ml"
      - "Taskfile.ya?ml"
      - "poetry.lock"
      - "pyproject.toml"
      - "tests/**"
      - "**.py"
  workflow_dispatch:
  repository_dispatch:

jobs:
  run-determination:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.determination.outputs.result }}
    steps:
      - name: Determine if the rest of the workflow should run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="refs/heads/[0-9]+.[0-9]+.x"
          # The `create` event trigger doesn't support `branches` filters, so it's necessary to use Bash instead.
          if [[ \
            "${{ github.event_name }}" != "create" || \
            "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX \
          ]]; then
            # Run the other jobs.
            RESULT="true"
          else
            # There is no need to run the other jobs.
            RESULT="false"
          fi

          echo "::set-output name=result::$RESULT"

  test:
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Run tests
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: pytest
          run: task python:test
